#include "lists.h"
/**
 * delete_dnodeint_at_index - deletes the node at index of a
 * dlistint_t linked list
 *
 * @head: head of the list
 * @index: index of the new node
 * Return: 1 if it succeeded, -1 if it failed
 */
int delete_dnodeint_at_index(dlistint_t **head, unsigned int index)
{ 
	dlistint_t *temp, *hold;
	unsigned int i, len = 0;

	temp = *head;
	while (temp)
	{
		len++;
		temp = temp->next;
	}

	if (idx > len)
		return (-1);
	if (idx == 0)
	{
		temp = *head->next;
		free(*head)
		*head = temp
		temp->prev == NULL;
		return (1);
	}
	if (idx == len - 1)
	{
		while (temp->next != NULL)
		{
			hold = temp;
			temp = temp->next;
		}
		free(temp);
		hold->next = NULL;
		return(1)
	}

	while (i < idx)
	{
		hold = temp;
		temp = temp->next;
	}
	hold->next = temp->next;
	temp->next->prev = hold;
	free(temp);
	return(1);
}
